"use strict";(()=>{var e={};e.id=5186,e.ids=[5186],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},4308:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>E,patchFetch:()=>w,requestAsyncStorage:()=>y,routeModule:()=>h,serverHooks:()=>S,staticGenerationAsyncStorage:()=>v});var o={};r.r(o),r.d(o,{GET:()=>g,OPTIONS:()=>x});var n=r(49303),i=r(88716),s=r(60670),a=r(87070),u=r(45256),p=r(71732),c=r(37060),l=r.n(c),d=r(41482),f=r.n(d),m=r(58543);async function x(){return a.NextResponse.json({},{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}})}async function g(e){let t;await (0,u.X)();let r=e.cookies.get("token")?.value;if(!r||!process.env.JWT_SECRET)return a.NextResponse.json({message:"인증이 필요합니다."},{status:401});try{t=f().verify(r,process.env.JWT_SECRET)}catch{return a.NextResponse.json({message:"유효하지 않은 토큰입니다."},{status:401})}let o=t?._id||t?.id||t?.userId,n=await p.Z.findById(o);if(!n)return a.NextResponse.json({message:"User not found"},{status:404});let i=n.certificateStatus;if(n.certificate)try{let e=l().pki.certificateFromPem(n.certificate),t=new Date;e.validity.notAfter<t&&("expired"!==i&&(n.certificateStatus="expired",await n.save()),i="expired")}catch(e){"expired"!==i&&(n.certificateStatus="expired",await n.save()),i="expired"}let s=t?.email;if(s&&s.includes(":"))try{s=(0,m.LJ)(s)}catch{}return a.NextResponse.json({userId:n._id,username:n.username,email:s,certificateStatus:i})}let h=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/user/me/route",pathname:"/api/user/me",filename:"route",bundlePath:"app/api/user/me/route"},resolvedPagePath:"E:\\test2\\app\\api\\user\\me\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:y,staticGenerationAsyncStorage:v,serverHooks:S}=h,E="/api/user/me/route";function w(){return(0,s.patchFetch)({serverHooks:S,staticGenerationAsyncStorage:v})}},45256:(e,t,r)=>{let o;r.d(t,{X:()=>a});var n=r(11185),i=r.n(n);let s=process.env.MONGODB_URI;if(!s)throw Error("MongoDB URI가 .env에 설정되어 있지 않습니다.");async function a(){o.conn&&o.conn.readyState>=1||(o.promise||(o.promise=i().connect(s).then(e=>e.connection)),o.conn=await o.promise)}global.mongoose?o=global.mongoose:(o={conn:null,promise:null},global.mongoose=o)},71732:(e,t,r)=>{r.d(t,{Z:()=>s});var o=r(11185),n=r.n(o);let i=new o.Schema({username:{type:String,required:!0,unique:!0},email:{type:String,required:!0,unique:!0},password:{type:String,required:!0},publicKey:{type:String},certificate:{type:String},otpEnabled:{type:Boolean,default:!1},otpSecret:{type:String},otpVerified:{type:Boolean,default:!1},certificateStatus:{type:String,default:"valid"},currentRefreshJti:{type:String}}),s=n().models.User||n().model("User",i)},58543:(e,t,r)=>{let o;r.d(t,{LJ:()=>s,UN:()=>i}),o=r(84770);let n="aes-256-cbc";function i(e){if(!o)throw Error("Node.js crypto not available");let t=Buffer.from(process.env.EMAIL_AES_KEY,"hex"),r=o.randomBytes(16),i=o.createCipheriv(n,t,r),s=i.update(e,"utf8","hex");return s+=i.final("hex"),r.toString("hex")+":"+s}function s(e){if(!o)throw Error("Node.js crypto not available");let t=Buffer.from(process.env.EMAIL_AES_KEY,"hex"),[r,i]=e.split(":"),s=Buffer.from(r,"hex"),a=o.createDecipheriv(n,t,s);return a.update(i,"hex","utf8")+a.final("utf8")}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[9276,5972,1482,7060],()=>r(4308));module.exports=o})();